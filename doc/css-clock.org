* CSS-   :opacity ".5"
         :transform-origin "bottom" })

      ;; To call a styled component that takes no arguments
      ;; defstyles symbols passed to end
      (def digi-clock-container (s/styled-component :div [s/all-centered s/digi-clock-container]))

      ;; Calling with arguments
      (def small-tick (s/styled-component :div [#(s/clock-tick ".2rem" "blue")]))

      ;; component created (clock-face) To be used in react as normal

      ;; call function returned by defs with arguments to et style.
      ;; Use like a normal component this solution requires attrs to be specified
      ;; styled-component can be modified to work around this.
      (fn []
        [:div
         [digi-clock-container { :onclick { #(js/window.log("clicked digital clock"))}}
          ;; etc
          ]
         [clock-tick {}]])
    #+END_SRC
** Cursors                                                          :reagent:
    #+BEGIN_SRC clojurescript

    #+END_SRC
** Using npm packages
*** yarn install package and use via require
#+BEGIN_SRC clojurescript
  (:require ["uuid" :as js-uuid]))
#+END_SRC
